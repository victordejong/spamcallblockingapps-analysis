package io.reactivex.rxkotlin;

import io.reactivex.Observable;
import io.reactivex.ObservableSource;
import io.reactivex.annotations.CheckReturnValue;
import io.reactivex.annotations.SchedulerSupport;
import kotlin.Metadata;
import kotlin.Pair;
import kotlin.jvm.internal.Intrinsics;
import org.jetbrains.annotations.NotNull;
@Metadata(bv = {1, 0, 3}, d1 = {"��B\n\u0002\u0010��\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n��\n\u0002\u0018\u0002\n\u0002\b\u0004\u001ak\u0010\t\u001a\u001a\u0012\u0016\u0012\u0014\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u0001\u0012\u0004\u0012\u00028\u00020\b0\u0004\"\b\b��\u0010\u0001*\u00020��\"\b\b\u0001\u0010\u0002*\u00020��\"\b\b\u0002\u0010\u0003*\u00020��*\b\u0012\u0004\u0012\u00028��0\u00042\f\u0010\u0006\u001a\b\u0012\u0004\u0012\u00028\u00010\u00052\f\u0010\u0007\u001a\b\u0012\u0004\u0012\u00028\u00020\u0005H\u0007¢\u0006\u0004\b\t\u0010\n\u001a\u0086\u0001\u0010\t\u001a\b\u0012\u0004\u0012\u00028\u00030\u0004\"\b\b��\u0010\u0001*\u00020��\"\b\b\u0001\u0010\u0002*\u00020��\"\b\b\u0002\u0010\u0003*\u00020��\"\b\b\u0003\u0010\u000b*\u00020��*\b\u0012\u0004\u0012\u00028��0\u00042\f\u0010\u0006\u001a\b\u0012\u0004\u0012\u00028\u00010\u00052\f\u0010\u0007\u001a\b\u0012\u0004\u0012\u00028\u00020\u00052 \b\u0004\u0010\r\u001a\u001a\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u0001\u0012\u0004\u0012\u00028\u0002\u0012\u0004\u0012\u00028\u00030\fH\u0087\b¢\u0006\u0004\b\t\u0010\u000e\u001a¤\u0001\u0010\t\u001a\b\u0012\u0004\u0012\u00028\u00040\u0004\"\b\b��\u0010\u0001*\u00020��\"\b\b\u0001\u0010\u0002*\u00020��\"\b\b\u0002\u0010\u0003*\u00020��\"\b\b\u0003\u0010\u000f*\u00020��\"\b\b\u0004\u0010\u000b*\u00020��*\b\u0012\u0004\u0012\u00028��0\u00042\f\u0010\u0006\u001a\b\u0012\u0004\u0012\u00028\u00010\u00052\f\u0010\u0007\u001a\b\u0012\u0004\u0012\u00028\u00020\u00052\f\u0010\u0010\u001a\b\u0012\u0004\u0012\u00028\u00030\u00052&\b\u0004\u0010\r\u001a \u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u0001\u0012\u0004\u0012\u00028\u0002\u0012\u0004\u0012\u00028\u0003\u0012\u0004\u0012\u00028\u00040\u0011H\u0087\b¢\u0006\u0004\b\t\u0010\u0012\u001aÂ\u0001\u0010\t\u001a\b\u0012\u0004\u0012\u00028\u00050\u0004\"\b\b��\u0010\u0001*\u00020��\"\b\b\u0001\u0010\u0002*\u00020��\"\b\b\u0002\u0010\u0003*\u00020��\"\b\b\u0003\u0010\u000f*\u00020��\"\b\b\u0004\u0010\u0013*\u00020��\"\b\b\u0005\u0010\u000b*\u00020��*\b\u0012\u0004\u0012\u00028��0\u00042\f\u0010\u0006\u001a\b\u0012\u0004\u0012\u00028\u00010\u00052\f\u0010\u0007\u001a\b\u0012\u0004\u0012\u00028\u00020\u00052\f\u0010\u0010\u001a\b\u0012\u0004\u0012\u00028\u00030\u00052\f\u0010\u0014\u001a\b\u0012\u0004\u0012\u00028\u00040\u00052,\b\u0004\u0010\r\u001a&\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u0001\u0012\u0004\u0012\u00028\u0002\u0012\u0004\u0012\u00028\u0003\u0012\u0004\u0012\u00028\u0004\u0012\u0004\u0012\u00028\u00050\u0015H\u0087\b¢\u0006\u0004\b\t\u0010\u0016\u001aM\u0010\t\u001a\u0014\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u00190\u0004\"\b\b��\u0010\u0001*\u00020��\"\b\b\u0001\u0010\u0017*\u00020��*\b\u0012\u0004\u0012\u00028��0\u00042\f\u0010\u0018\u001a\b\u0012\u0004\u0012\u00028\u00010\u0005H\u0007¢\u0006\u0004\b\t\u0010\u001a\u001ah\u0010\t\u001a\b\u0012\u0004\u0012\u00028\u00020\u0004\"\b\b��\u0010\u0001*\u00020��\"\b\b\u0001\u0010\u0017*\u00020��\"\b\b\u0002\u0010\u000b*\u00020��*\b\u0012\u0004\u0012\u00028��0\u00042\f\u0010\u0018\u001a\b\u0012\u0004\u0012\u00028\u00010\u00052\u001a\b\u0004\u0010\r\u001a\u0014\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u0001\u0012\u0004\u0012\u00028\u00020\u001bH\u0087\b¢\u0006\u0004\b\t\u0010\u001c\u001aM\u0010\u001d\u001a\u0014\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u00190\u0004\"\b\b��\u0010\u0001*\u00020��\"\b\b\u0001\u0010\u0017*\u00020��*\b\u0012\u0004\u0012\u00028��0\u00042\f\u0010\u0018\u001a\b\u0012\u0004\u0012\u00028\u00010\u0005H\u0007¢\u0006\u0004\b\u001d\u0010\u001a\u001ah\u0010\u001d\u001a\b\u0012\u0004\u0012\u00028\u00020\u0004\"\b\b��\u0010\u0001*\u00020��\"\b\b\u0001\u0010\u0017*\u00020��\"\b\b\u0002\u0010\u000b*\u00020��*\b\u0012\u0004\u0012\u00028��0\u00042\f\u0010\u0018\u001a\b\u0012\u0004\u0012\u00028\u00010\u00052\u001a\b\u0004\u0010\u001e\u001a\u0014\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u0001\u0012\u0004\u0012\u00028\u00020\u001bH\u0087\b¢\u0006\u0004\b\u001d\u0010\u001c¨\u0006\u001f"}, d2 = {"", "T", "T1", "T2", "Lio/reactivex/Observable;", "Lio/reactivex/ObservableSource;", "o1", "o2", "Lkotlin/Triple;", "withLatestFrom", "(Lio/reactivex/Observable;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;", "R", "Lkotlin/Function3;", "combiner", "(Lio/reactivex/Observable;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lkotlin/Function3;)Lio/reactivex/Observable;", "T3", "o3", "Lkotlin/Function4;", "(Lio/reactivex/Observable;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lkotlin/Function4;)Lio/reactivex/Observable;", "T4", "o4", "Lkotlin/Function5;", "(Lio/reactivex/Observable;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lio/reactivex/ObservableSource;Lkotlin/Function5;)Lio/reactivex/Observable;", "U", "other", "Lkotlin/Pair;", "(Lio/reactivex/Observable;Lio/reactivex/ObservableSource;)Lio/reactivex/Observable;", "Lkotlin/Function2;", "(Lio/reactivex/Observable;Lio/reactivex/ObservableSource;Lkotlin/Function2;)Lio/reactivex/Observable;", "zipWith", "zipper", "rxkotlin"}, k = 2, mv = {1, 1, 15}, pn = "", xi = 0, xs = "")
/* loaded from: classes2-dex2jar.jar:io/reactivex/rxkotlin/ObservablesKt.class */
public final class ObservablesKt {
    /* JADX WARN: Multi-variable type inference failed */
    @SchedulerSupport
    @CheckReturnValue
    @NotNull
    /* renamed from: a */
    public static final <T, U> Observable<Pair<T, U>> m3258a(@NotNull Observable<T> zipWith, @NotNull ObservableSource<U> other) {
        Intrinsics.m1829f(zipWith, "$this$zipWith");
        Intrinsics.m1829f(other, "other");
        Observable<Pair<T, U>> observable = (Observable<Pair<T, U>>) zipWith.zipWith(other, ObservablesKt$zipWith$2.f19653f);
        Intrinsics.m1833b(observable, "zipWith(other, BiFunction { t, u -> Pair(t, u) })");
        return observable;
    }
}
