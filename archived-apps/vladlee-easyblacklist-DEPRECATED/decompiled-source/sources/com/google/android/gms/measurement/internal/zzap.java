package com.google.android.gms.measurement.internal;

import android.content.Context;
import com.google.android.gms.internal.measurement.zzbx;
import com.google.android.gms.internal.measurement.zzcm;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
/* loaded from: classes-dex2jar.jar:com/google/android/gms/measurement/internal/zzap.class */
public final class zzap {

    /* renamed from: c */
    private static zzel<Boolean> f17109c;

    /* renamed from: d */
    private static zzel<Boolean> f17110d;
    public static zzel<Boolean> zza;
    public static zzel<Boolean> zzah;
    public static zzel<Double> zzal;
    public static zzel<Boolean> zzan;
    public static zzel<Boolean> zzao;
    public static zzel<Boolean> zzap;
    public static zzel<Boolean> zzaq;
    public static zzel<Boolean> zzar;
    public static zzel<Boolean> zzas;
    public static zzel<Boolean> zzat;
    public static zzel<Boolean> zzau;
    public static zzel<Boolean> zzav;
    public static zzel<Boolean> zzaw;
    public static zzel<Boolean> zzax;
    public static zzel<Boolean> zzay;
    public static zzel<Boolean> zzaz;
    public static zzel<Boolean> zzba;
    public static zzel<Boolean> zzbb;
    public static zzel<Boolean> zzbc;
    public static zzel<Boolean> zzbd;
    public static zzel<Boolean> zzbe;
    public static zzel<Boolean> zzbf;
    public static zzel<Boolean> zzbg;
    public static zzel<Boolean> zzbh;
    public static zzel<Boolean> zzbi;
    public static zzel<Boolean> zzbj;
    public static zzel<Boolean> zzbk;
    public static zzel<Boolean> zzbl;
    public static zzel<Boolean> zzbm;
    public static zzel<Boolean> zzbn;
    public static zzel<Boolean> zzbo;
    public static zzel<Boolean> zzbp;
    public static zzel<Boolean> zzbq;
    public static zzel<Boolean> zzbr;
    public static zzel<Boolean> zzbs;
    public static zzel<Boolean> zzbt;
    public static zzel<Boolean> zzbu;
    public static zzel<Boolean> zzbv;
    public static zzel<Boolean> zzbw;
    public static zzel<Boolean> zzbx;
    public static zzel<Boolean> zzby;
    public static zzel<Boolean> zzbz;
    public static zzel<Boolean> zzca;
    public static zzel<Boolean> zzcb;
    public static zzel<Boolean> zzcc;
    public static zzel<Boolean> zzcd;
    public static zzel<Boolean> zzce;
    public static zzel<Boolean> zzcf;
    public static zzel<Boolean> zzcg;
    public static zzel<Boolean> zzch;
    public static zzel<Boolean> zzci;
    public static zzel<Boolean> zzcj;
    public static zzel<Boolean> zzck;
    public static zzel<Boolean> zzcl;
    public static zzel<Boolean> zzcm;
    public static zzel<Boolean> zzcn;
    public static zzel<Boolean> zzco;
    public static zzel<Boolean> zzcp;
    public static zzel<Boolean> zzcq;

    /* renamed from: a */
    private static List<zzel<?>> f17107a = Collections.synchronizedList(new ArrayList());

    /* renamed from: b */
    private static Set<zzel<?>> f17108b = Collections.synchronizedSet(new HashSet());
    public static zzel<Long> zzb = m1962a("measurement.ad_id_cache_time", 10000L, 10000L, C2856j.f17072a);
    public static zzel<Long> zzc = m1962a("measurement.monitoring.sample_period_millis", 86400000L, 86400000L, C2869w.f17085a);
    public static zzel<Long> zzd = m1962a("measurement.config.cache_time", 86400000L, 3600000L, C2644af.f16558a);
    public static zzel<String> zze = m1962a("measurement.config.url_scheme", "https", "https", C2658at.f16573a);
    public static zzel<String> zzf = m1962a("measurement.config.url_authority", "app-measurement.com", "app-measurement.com", C2668bc.f16583a);
    public static zzel<Integer> zzg = m1962a("measurement.upload.max_bundles", 100, 100, C2681bp.f16596a);
    public static zzel<Integer> zzh = m1962a("measurement.upload.max_batch_size", 65536, 65536, C2691bz.f16608a);
    public static zzel<Integer> zzi = m1962a("measurement.upload.max_bundle_size", 65536, 65536, C2705cm.f16631a);
    public static zzel<Integer> zzj = m1962a("measurement.upload.max_events_per_bundle", 1000, 1000, C2715cw.f16641a);
    public static zzel<Integer> zzk = m1962a("measurement.upload.max_events_per_day", 100000, 100000, C2859m.f17075a);
    public static zzel<Integer> zzl = m1962a("measurement.upload.max_error_events_per_day", 1000, 1000, C2858l.f17074a);
    public static zzel<Integer> zzm = m1962a("measurement.upload.max_public_events_per_day", 50000, 50000, C2861o.f17077a);
    public static zzel<Integer> zzn = m1962a("measurement.upload.max_conversions_per_day", 500, 500, C2860n.f17076a);
    public static zzel<Integer> zzo = m1962a("measurement.upload.max_realtime_events_per_day", 10, 10, C2863q.f17079a);
    public static zzel<Integer> zzp = m1962a("measurement.store.max_stored_events_per_app", 100000, 100000, C2862p.f17078a);
    public static zzel<String> zzq = m1962a("measurement.upload.url", "https://app-measurement.com/a", "https://app-measurement.com/a", C2865s.f17081a);
    public static zzel<Long> zzr = m1962a("measurement.upload.backoff_period", 43200000L, 43200000L, C2864r.f17080a);
    public static zzel<Long> zzs = m1962a("measurement.upload.window_interval", 3600000L, 3600000L, C2867u.f17083a);
    public static zzel<Long> zzt = m1962a("measurement.upload.interval", 3600000L, 3600000L, C2866t.f17082a);
    public static zzel<Long> zzu = m1962a("measurement.upload.realtime_upload_interval", 10000L, 10000L, C2868v.f17084a);
    public static zzel<Long> zzv = m1962a("measurement.upload.debug_upload_interval", 1000L, 1000L, C2871y.f17087a);
    public static zzel<Long> zzw = m1962a("measurement.upload.minimum_delay", 500L, 500L, C2870x.f17086a);
    public static zzel<Long> zzx = m1962a("measurement.alarm_manager.minimum_interval", 60000L, 60000L, C2639aa.f16553a);
    public static zzel<Long> zzy = m1962a("measurement.upload.stale_data_deletion_interval", 86400000L, 86400000L, C2872z.f17088a);
    public static zzel<Long> zzz = m1962a("measurement.upload.refresh_blacklisted_config_interval", 604800000L, 604800000L, C2641ac.f16555a);
    public static zzel<Long> zzaa = m1962a("measurement.upload.initial_upload_delay_time", 15000L, 15000L, C2640ab.f16554a);
    public static zzel<Long> zzab = m1962a("measurement.upload.retry_time", 1800000L, 1800000L, C2643ae.f16557a);
    public static zzel<Integer> zzac = m1962a("measurement.upload.retry_count", 6, 6, C2642ad.f16556a);
    public static zzel<Long> zzad = m1962a("measurement.upload.max_queue_time", 2419200000L, 2419200000L, C2645ag.f16559a);
    public static zzel<Integer> zzae = m1962a("measurement.lifetimevalue.max_currency_tracked", 4, 4, C2647ai.f16561a);
    public static zzel<Integer> zzaf = m1962a("measurement.audience.filter_result_max_count", 200, 200, C2646ah.f16560a);
    public static zzel<Long> zzag = m1962a("measurement.service_client.idle_disconnect_millis", 5000L, 5000L, C2649ak.f16563a);
    public static zzel<String> zzai = m1962a("measurement.test.string_flag", "---", "---", C2651am.f16565a);
    public static zzel<Long> zzaj = m1962a("measurement.test.long_flag", -1L, -1L, C2650al.f16564a);
    public static zzel<Integer> zzak = m1962a("measurement.test.int_flag", -2, -2, C2653ao.f16567a);
    public static zzel<Integer> zzam = m1962a("measurement.experiment.max_ids", 50, 50, C2655aq.f16569a);

    static {
        Boolean bool = Boolean.TRUE;
        zza = m1962a("measurement.upload_dsid_enabled", bool, bool, C2857k.f17073a);
        Boolean bool2 = Boolean.FALSE;
        zzah = m1962a("measurement.test.boolean_flag", bool2, bool2, C2648aj.f16562a);
        Double valueOf = Double.valueOf(-3.0d);
        zzal = m1962a("measurement.test.double_flag", valueOf, valueOf, C2652an.f16566a);
        Boolean bool3 = Boolean.FALSE;
        zzan = m1962a("measurement.validation.internal_limits_internal_event_params", bool3, bool3, C2654ap.f16568a);
        Boolean bool4 = Boolean.FALSE;
        zzao = m1962a("measurement.referrer.enable_logging_install_referrer_cmp_from_apk", bool4, bool4, C2656ar.f16570a);
        Boolean bool5 = Boolean.TRUE;
        zzap = m1962a("measurement.client.sessions.session_id_enabled", bool5, bool5, C2660av.f16575a);
        Boolean bool6 = Boolean.TRUE;
        zzaq = m1962a("measurement.service.sessions.session_number_enabled", bool6, bool6, C2659au.f16574a);
        Boolean bool7 = Boolean.TRUE;
        zzar = m1962a("measurement.client.sessions.background_sessions_enabled", bool7, bool7, C2662ax.f16577a);
        Boolean bool8 = Boolean.TRUE;
        zzas = m1962a("measurement.client.sessions.remove_expired_session_properties_enabled", bool8, bool8, C2661aw.f16576a);
        Boolean bool9 = Boolean.TRUE;
        zzat = m1962a("measurement.service.sessions.session_number_backfill_enabled", bool9, bool9, C2664az.f16579a);
        Boolean bool10 = Boolean.TRUE;
        zzau = m1962a("measurement.service.sessions.remove_disabled_session_number", bool10, bool10, C2663ay.f16578a);
        Boolean bool11 = Boolean.TRUE;
        zzav = m1962a("measurement.client.sessions.start_session_before_view_screen", bool11, bool11, C2667bb.f16582a);
        Boolean bool12 = Boolean.TRUE;
        zzaw = m1962a("measurement.client.sessions.check_on_startup", bool12, bool12, C2666ba.f16581a);
        Boolean bool13 = Boolean.TRUE;
        zzax = m1962a("measurement.collection.firebase_global_collection_flag_enabled", bool13, bool13, C2669bd.f16584a);
        Boolean bool14 = Boolean.FALSE;
        zzay = m1962a("measurement.collection.efficient_engagement_reporting_enabled", bool14, bool14, C2671bf.f16586a);
        Boolean bool15 = Boolean.FALSE;
        zzaz = m1962a("measurement.collection.redundant_engagement_removal_enabled", bool15, bool15, C2670be.f16585a);
        Boolean bool16 = Boolean.TRUE;
        zzba = m1962a("measurement.personalized_ads_signals_collection_enabled", bool16, bool16, C2673bh.f16588a);
        Boolean bool17 = Boolean.TRUE;
        zzbb = m1962a("measurement.personalized_ads_property_translation_enabled", bool17, bool17, C2672bg.f16587a);
        Boolean bool18 = Boolean.TRUE;
        zzbc = m1962a("measurement.upload.disable_is_uploader", bool18, bool18, C2675bj.f16590a);
        Boolean bool19 = Boolean.TRUE;
        zzbd = m1962a("measurement.experiment.enable_experiment_reporting", bool19, bool19, C2674bi.f16589a);
        Boolean bool20 = Boolean.TRUE;
        zzbe = m1962a("measurement.collection.log_event_and_bundle_v2", bool20, bool20, C2677bl.f16592a);
        Boolean bool21 = Boolean.FALSE;
        zzbf = m1962a("measurement.quality.checksum", bool21, bool21, null);
        Boolean bool22 = Boolean.TRUE;
        zzbg = m1962a("measurement.module.collection.conditionally_omit_admob_app_id", bool22, bool22, C2676bk.f16591a);
        Boolean bool23 = Boolean.FALSE;
        zzbh = m1962a("measurement.sdk.dynamite.use_dynamite2", bool23, bool23, C2679bn.f16594a);
        Boolean bool24 = Boolean.FALSE;
        zzbi = m1962a("measurement.sdk.dynamite.allow_remote_dynamite", bool24, bool24, C2678bm.f16593a);
        Boolean bool25 = Boolean.FALSE;
        zzbj = m1962a("measurement.sdk.collection.validate_param_names_alphabetical", bool25, bool25, C2680bo.f16595a);
        Boolean bool26 = Boolean.TRUE;
        zzbk = m1962a("measurement.collection.event_safelist", bool26, bool26, C2683br.f16598a);
        Boolean bool27 = Boolean.FALSE;
        zzbl = m1962a("measurement.service.audience.scoped_filters_v27", bool27, bool27, C2682bq.f16597a);
        Boolean bool28 = Boolean.FALSE;
        zzbm = m1962a("measurement.service.audience.session_scoped_event_aggregates", bool28, bool28, C2686bu.f16603a);
        Boolean bool29 = Boolean.FALSE;
        zzbn = m1962a("measurement.service.audience.session_scoped_user_engagement", bool29, bool29, C2684bs.f16599a);
        Boolean bool30 = Boolean.TRUE;
        zzbo = m1962a("measurement.service.audience.scoped_engagement_removal_when_session_expired", bool30, bool30, C2688bw.f16605a);
        Boolean bool31 = Boolean.TRUE;
        zzbp = m1962a("measurement.client.audience.scoped_engagement_removal_when_session_expired", bool31, bool31, C2687bv.f16604a);
        Boolean bool32 = Boolean.FALSE;
        zzbq = m1962a("measurement.service.audience.remove_disabled_session_scoped_user_engagement", bool32, bool32, C2690by.f16607a);
        Boolean bool33 = Boolean.FALSE;
        zzbr = m1962a("measurement.service.audience.use_bundle_timestamp_for_property_filters", bool33, bool33, C2689bx.f16606a);
        Boolean bool34 = Boolean.FALSE;
        zzbs = m1962a("measurement.service.audience.fix_prepending_previous_sequence_timestamp", bool34, bool34, C2693ca.f16619a);
        Boolean bool35 = Boolean.FALSE;
        f17109c = m1962a("measurement.service.audience.invalidate_config_cache_after_app_unisntall", bool35, bool35, C2695cc.f16621a);
        Boolean bool36 = Boolean.TRUE;
        zzbt = m1962a("measurement.service.audience.fix_skip_audience_with_failed_filters", bool36, bool36, C2694cb.f16620a);
        Boolean bool37 = Boolean.TRUE;
        zzbu = m1962a("measurement.sdk.collection.retrieve_deeplink_from_bow_2", bool37, bool37, C2697ce.f16623a);
        Boolean bool38 = Boolean.FALSE;
        zzbv = m1962a("measurement.app_launch.event_ordering_fix", bool38, bool38, C2696cd.f16622a);
        Boolean bool39 = Boolean.FALSE;
        zzbw = m1962a("measurement.sdk.collection.last_deep_link_referrer", bool39, bool39, C2699cg.f16625a);
        Boolean bool40 = Boolean.FALSE;
        zzbx = m1962a("measurement.sdk.collection.last_deep_link_referrer_campaign", bool40, bool40, C2698cf.f16624a);
        Boolean bool41 = Boolean.FALSE;
        zzby = m1962a("measurement.sdk.collection.last_gclid_from_referrer", bool41, bool41, C2701ci.f16627a);
        Boolean bool42 = Boolean.TRUE;
        zzbz = m1962a("measurement.sdk.collection.worker_thread_referrer", bool42, bool42, C2700ch.f16626a);
        Boolean bool43 = Boolean.FALSE;
        zzca = m1962a("measurement.upload.file_lock_state_check", bool43, bool43, C2703ck.f16629a);
        Boolean bool44 = Boolean.TRUE;
        zzcb = m1962a("measurement.sampling.calculate_bundle_timestamp_before_sampling", bool44, bool44, C2702cj.f16628a);
        Boolean bool45 = Boolean.FALSE;
        zzcc = m1962a("measurement.ga.ga_app_id", bool45, bool45, C2704cl.f16630a);
        Boolean bool46 = Boolean.FALSE;
        zzcd = m1962a("measurement.lifecycle.app_backgrounded_tracking", bool46, bool46, C2707co.f16633a);
        Boolean bool47 = Boolean.FALSE;
        zzce = m1962a("measurement.lifecycle.app_in_background_parameter", bool47, bool47, C2706cn.f16632a);
        Boolean bool48 = Boolean.FALSE;
        zzcf = m1962a("measurement.integration.disable_firebase_instance_id", bool48, bool48, C2709cq.f16635a);
        Boolean bool49 = Boolean.FALSE;
        zzcg = m1962a("measurement.lifecycle.app_backgrounded_engagement", bool49, bool49, C2708cp.f16634a);
        Boolean bool50 = Boolean.FALSE;
        zzch = m1962a("measurement.service.fix_gmp_version", bool50, bool50, C2711cs.f16637a);
        Boolean bool51 = Boolean.FALSE;
        zzci = m1962a("measurement.collection.service.update_with_analytics_fix", bool51, bool51, C2710cr.f16636a);
        Boolean bool52 = Boolean.FALSE;
        zzcj = m1962a("measurement.service.disable_install_state_reporting", bool52, bool52, C2714cv.f16640a);
        Boolean bool53 = Boolean.FALSE;
        zzck = m1962a("measurement.service.use_appinfo_modified", bool53, bool53, C2712ct.f16638a);
        Boolean bool54 = Boolean.TRUE;
        f17110d = m1962a("measurement.upload.dsid_reflection_failure_logging", bool54, bool54, C2716cx.f16642a);
        Boolean bool55 = Boolean.TRUE;
        zzcl = m1962a("measurement.client.firebase_feature_rollout.v1.enable", bool55, bool55, C2718cz.f16644a);
        Boolean bool56 = Boolean.FALSE;
        zzcm = m1962a("measurement.client.sessions.check_on_reset_and_enable", bool56, bool56, C2717cy.f16643a);
        Boolean bool57 = Boolean.FALSE;
        zzcn = m1962a("measurement.config.string.always_update_disk_on_set", bool57, bool57, C2721db.f16647a);
        Boolean bool58 = Boolean.FALSE;
        zzco = m1962a("measurement.scheduler.task_thread.cleanup_on_exit", bool58, bool58, C2720da.f16646a);
        Boolean bool59 = Boolean.FALSE;
        zzcp = m1962a("measurement.upload.file_truncate_fix", bool59, bool59, C2723dd.f16649a);
        Boolean bool60 = Boolean.TRUE;
        zzcq = m1962a("measurement.lifecycle.app_background_timestamp_when_backgrounded", bool60, bool60, C2722dc.f16648a);
    }

    /* renamed from: a */
    private static <V> zzel<V> m1962a(String str, V v, V v2, AbstractC2724de<V> deVar) {
        zzel<V> zzelVar = new zzel<>(str, v, v2, deVar, (byte) 0);
        f17107a.add(zzelVar);
        return zzelVar;
    }

    public static Map<String, String> zza(Context context) {
        zzbx zza2 = zzbx.zza(context.getContentResolver(), zzcm.zza("com.google.android.gms.measurement"));
        return zza2 == null ? Collections.emptyMap() : zza2.zza();
    }
}
