package kotlin.collections;

import com.google.firebase.analytics.FirebaseAnalytics;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import kotlin.Metadata;
import kotlin.Pair;
import kotlin.SinceKotlin;
import kotlin.jvm.internal.Intrinsics;
import org.jetbrains.annotations.NotNull;
/* JADX INFO: Access modifiers changed from: package-private */
@Metadata(bv = {1, 0, 3}, d1 = {"��\u0088\u0001\n\u0002\b\u0002\n\u0002\u0010\b\n��\n\u0002\u0018\u0002\n\u0002\u0010%\n\u0002\u0010\u0002\n\u0002\u0018\u0002\n��\n\u0002\u0010$\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u0011\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0006\n\u0002\u0010&\n\u0002\b\u0003\n\u0002\u0018\u0002\n��\n\u0002\u0010\u000b\n\u0002\b\u0012\n\u0002\u0018\u0002\n\u0002\b\f\n\u0002\u0010(\n\u0002\b\u0002\n\u0002\u0010)\n\u0002\u0010'\n\u0002\b\n\n\u0002\u0010\u001c\n��\n\u0002\u0018\u0002\n\u0002\b!\u001ag\u0010\n\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u00012\u0006\u0010\u0003\u001a\u00020\u00022%\b\u0001\u0010\b\u001a\u001f\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u0005\u0012\u0004\u0012\u00020\u00060\u0004¢\u0006\u0002\b\u0007H\u0087\bø\u0001��\u0082\u0002\n\n\b\b\u0001\u0012\u0002\u0010\u0002 \u0001¢\u0006\u0004\b\n\u0010\u000b\u001a_\u0010\n\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u00012%\b\u0001\u0010\b\u001a\u001f\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u0005\u0012\u0004\u0012\u00020\u00060\u0004¢\u0006\u0002\b\u0007H\u0087\bø\u0001��\u0082\u0002\n\n\b\b\u0001\u0012\u0002\u0010\u0001 \u0001¢\u0006\u0004\b\n\u0010\f\u001a%\u0010\r\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001¢\u0006\u0004\b\r\u0010\u000e\u001a8\u0010\u0011\u001a\u001e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u000fj\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u0001`\u0010\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001H\u0087\b¢\u0006\u0004\b\u0011\u0010\u0012\u001aa\u0010\u0011\u001a\u001e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u000fj\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u0001`\u0010\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u00012*\u0010\u0015\u001a\u0016\u0012\u0012\b\u0001\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u00140\u0013\"\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u0014¢\u0006\u0004\b\u0011\u0010\u0016\u001a8\u0010\u0019\u001a\u001e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u0017j\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u0001`\u0018\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001H\u0087\b¢\u0006\u0004\b\u0019\u0010\u001a\u001aa\u0010\u0019\u001a\u001e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u0017j\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u0001`\u0018\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u00012*\u0010\u0015\u001a\u0016\u0012\u0012\b\u0001\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u00140\u0013\"\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u0014¢\u0006\u0004\b\u0019\u0010\u001b\u001a(\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001H\u0087\b¢\u0006\u0004\b\u001c\u0010\u000e\u001aQ\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u00012*\u0010\u0015\u001a\u0016\u0012\u0012\b\u0001\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u00140\u0013\"\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u0014¢\u0006\u0004\b\u001c\u0010\u001d\u001a(\u0010\u001e\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u0005\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001H\u0087\b¢\u0006\u0004\b\u001e\u0010\u000e\u001aQ\u0010\u001e\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u0005\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u00012*\u0010\u0015\u001a\u0016\u0012\u0012\b\u0001\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u00140\u0013\"\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u0014¢\u0006\u0004\b\u001e\u0010\u001d\u001a,\u0010 \u001a\u00028��\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u001fH\u0087\n¢\u0006\u0004\b \u0010!\u001a,\u0010\"\u001a\u00028\u0001\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u001fH\u0087\n¢\u0006\u0004\b\"\u0010!\u001a;\u0010&\u001a\u00020%\"\t\b��\u0010��¢\u0006\u0002\b#\"\u0004\b\u0001\u0010\u0001*\u0010\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t2\u0006\u0010$\u001a\u00028��H\u0087\n¢\u0006\u0004\b&\u0010'\u001a3\u0010(\u001a\u00020%\"\t\b��\u0010��¢\u0006\u0002\b#*\u000e\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0002\b\u00030\t2\u0006\u0010$\u001a\u00028��H\u0087\b¢\u0006\u0004\b(\u0010'\u001a9\u0010*\u001a\u00020%\"\u0004\b��\u0010��\"\t\b\u0001\u0010\u0001¢\u0006\u0002\b#*\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t2\u0006\u0010)\u001a\u00028\u0001H\u0087\b¢\u0006\u0004\b*\u0010'\u001a]\u0010,\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0010\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t2\u001e\u0010+\u001a\u001a\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u001f\u0012\u0004\u0012\u00020%0\u0004H\u0086\bø\u0001��¢\u0006\u0004\b,\u0010-\u001aQ\u0010.\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0010\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t2\u0012\u0010+\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00020%0\u0004H\u0086\bø\u0001��¢\u0006\u0004\b.\u0010-\u001a]\u0010/\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0010\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t2\u001e\u0010+\u001a\u001a\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u001f\u0012\u0004\u0012\u00020%0\u0004H\u0086\bø\u0001��¢\u0006\u0004\b/\u0010-\u001as\u00102\u001a\u00028\u0002\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001\"\u0018\b\u0002\u00100*\u0012\u0012\u0006\b��\u0012\u00028��\u0012\u0006\b��\u0012\u00028\u00010\u0005*\u0010\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t2\u0006\u00101\u001a\u00028\u00022\u001e\u0010+\u001a\u001a\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u001f\u0012\u0004\u0012\u00020%0\u0004H\u0086\bø\u0001��¢\u0006\u0004\b2\u00103\u001as\u00104\u001a\u00028\u0002\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001\"\u0018\b\u0002\u00100*\u0012\u0012\u0006\b��\u0012\u00028��\u0012\u0006\b��\u0012\u00028\u00010\u0005*\u0010\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t2\u0006\u00101\u001a\u00028\u00022\u001e\u0010+\u001a\u001a\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u001f\u0012\u0004\u0012\u00020%0\u0004H\u0086\bø\u0001��¢\u0006\u0004\b4\u00103\u001aQ\u00105\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0010\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t2\u0012\u0010+\u001a\u000e\u0012\u0004\u0012\u00028\u0001\u0012\u0004\u0012\u00020%0\u0004H\u0086\bø\u0001��¢\u0006\u0004\b5\u0010-\u001a=\u00106\u001a\u0004\u0018\u00018\u0001\"\t\b��\u0010��¢\u0006\u0002\b#\"\u0004\b\u0001\u0010\u0001*\u0010\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t2\u0006\u0010$\u001a\u00028��H\u0087\n¢\u0006\u0004\b6\u00107\u001aE\u0010:\u001a\u00028\u0001\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t2\u0006\u0010$\u001a\u00028��2\f\u00109\u001a\b\u0012\u0004\u0012\u00028\u000108H\u0087\bø\u0001��¢\u0006\u0004\b:\u0010;\u001aE\u0010<\u001a\u00028\u0001\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t2\u0006\u0010$\u001a\u00028��2\f\u00109\u001a\b\u0012\u0004\u0012\u00028\u000108H\u0080\bø\u0001��¢\u0006\u0004\b<\u0010;\u001aE\u0010=\u001a\u00028\u0001\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u00052\u0006\u0010$\u001a\u00028��2\f\u00109\u001a\b\u0012\u0004\u0012\u00028\u000108H\u0086\bø\u0001��¢\u0006\u0004\b=\u0010;\u001a3\u0010>\u001a\u00028\u0001\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t2\u0006\u0010$\u001a\u00028��H\u0007¢\u0006\u0004\b>\u00107\u001aA\u0010@\u001a\u00028\u0001\"\u0014\b��\u00100*\n\u0012\u0002\b\u0003\u0012\u0002\b\u00030\t*\u00028\u0001\"\u0004\b\u0001\u0010?*\u00028��2\f\u00109\u001a\b\u0012\u0004\u0012\u00028\u000108H\u0087\bø\u0001��¢\u0006\u0004\b@\u0010A\u001a.\u0010B\u001a\u00020%\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0010\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\tH\u0087\b¢\u0006\u0004\bB\u0010C\u001aA\u0010D\u001a\u00020%\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0012\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u0001\u0018\u00010\tH\u0087\b\u0082\u0002\u000e\n\f\b��\u0012\u0002\u0018\u0001\u001a\u0004\b\u0003\u0010��¢\u0006\u0004\bD\u0010C\u001a@\u0010F\u001a\u0014\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u001f0E\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0010\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\tH\u0087\n¢\u0006\u0004\bF\u0010G\u001a>\u0010F\u001a\u0014\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010I0H\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u0005H\u0087\n¢\u0006\u0004\bJ\u0010G\u001ac\u0010L\u001a\u000e\u0012\u0004\u0012\u00028\u0002\u0012\u0004\u0012\u00028\u00010\t\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001\"\u0004\b\u0002\u0010?*\u0010\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t2\u001e\u0010K\u001a\u001a\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u001f\u0012\u0004\u0012\u00028\u00020\u0004H\u0086\bø\u0001��¢\u0006\u0004\bL\u0010-\u001ay\u0010M\u001a\u00028\u0003\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001\"\u0004\b\u0002\u0010?\"\u0018\b\u0003\u00100*\u0012\u0012\u0006\b��\u0012\u00028\u0002\u0012\u0006\b��\u0012\u00028\u00010\u0005*\u0010\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t2\u0006\u00101\u001a\u00028\u00032\u001e\u0010K\u001a\u001a\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u001f\u0012\u0004\u0012\u00028\u00020\u0004H\u0086\bø\u0001��¢\u0006\u0004\bM\u00103\u001ac\u0010N\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00020\t\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001\"\u0004\b\u0002\u0010?*\u0010\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t2\u001e\u0010K\u001a\u001a\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u001f\u0012\u0004\u0012\u00028\u00020\u0004H\u0086\bø\u0001��¢\u0006\u0004\bN\u0010-\u001ay\u0010O\u001a\u00028\u0003\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001\"\u0004\b\u0002\u0010?\"\u0018\b\u0003\u00100*\u0012\u0012\u0006\b��\u0012\u00028��\u0012\u0006\b��\u0012\u00028\u00020\u0005*\u0010\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t2\u0006\u00101\u001a\u00028\u00032\u001e\u0010K\u001a\u001a\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u001f\u0012\u0004\u0012\u00028\u00020\u0004H\u0086\bø\u0001��¢\u0006\u0004\bO\u00103\u001aB\u0010P\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0010\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t2\u0006\u0010$\u001a\u00028��H\u0087\u0002¢\u0006\u0004\bP\u0010Q\u001aJ\u0010P\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0010\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t2\u000e\u0010R\u001a\n\u0012\u0006\b\u0001\u0012\u00028��0\u0013H\u0087\u0002¢\u0006\u0004\bP\u0010S\u001aH\u0010P\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0010\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t2\f\u0010R\u001a\b\u0012\u0004\u0012\u00028��0TH\u0087\u0002¢\u0006\u0004\bP\u0010U\u001aH\u0010P\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0010\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t2\f\u0010R\u001a\b\u0012\u0004\u0012\u00028��0VH\u0087\u0002¢\u0006\u0004\bP\u0010W\u001a4\u0010X\u001a\u00020\u0006\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u00052\u0006\u0010$\u001a\u00028��H\u0087\n¢\u0006\u0004\bX\u0010Y\u001a<\u0010X\u001a\u00020\u0006\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u00052\u000e\u0010R\u001a\n\u0012\u0006\b\u0001\u0012\u00028��0\u0013H\u0087\n¢\u0006\u0004\bX\u0010Z\u001a:\u0010X\u001a\u00020\u0006\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u00052\f\u0010R\u001a\b\u0012\u0004\u0012\u00028��0TH\u0087\n¢\u0006\u0004\bX\u0010[\u001a:\u0010X\u001a\u00020\u0006\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u00052\f\u0010R\u001a\b\u0012\u0004\u0012\u00028��0VH\u0087\n¢\u0006\u0004\bX\u0010\\\u001a7\u0010]\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\tH��¢\u0006\u0004\b]\u0010^\u001a:\u0010_\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0010\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u0001\u0018\u00010\tH\u0087\b¢\u0006\u0004\b_\u0010^\u001aV\u0010`\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0010\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t2\u001a\u0010\u0015\u001a\u0016\u0012\u0012\b\u0001\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u00140\u0013H\u0086\u0002¢\u0006\u0004\b`\u0010a\u001aN\u0010`\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0010\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t2\u0012\u0010b\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u0014H\u0086\u0002¢\u0006\u0004\b`\u0010c\u001aT\u0010`\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0010\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t2\u0018\u0010\u0015\u001a\u0014\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u00140TH\u0086\u0002¢\u0006\u0004\b`\u0010U\u001aP\u0010`\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0010\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t2\u0014\u0010d\u001a\u0010\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\tH\u0086\u0002¢\u0006\u0004\b`\u0010e\u001aT\u0010`\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0010\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t2\u0018\u0010\u0015\u001a\u0014\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u00140VH\u0086\u0002¢\u0006\u0004\b`\u0010W\u001aL\u0010f\u001a\u00020\u0006\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0012\u0012\u0006\b��\u0012\u00028��\u0012\u0006\b��\u0012\u00028\u00010\u00052\u001a\u0010\u0015\u001a\u0016\u0012\u0012\b\u0001\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u00140\u0013H\u0087\n¢\u0006\u0004\bf\u0010g\u001aD\u0010f\u001a\u00020\u0006\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0012\u0012\u0006\b��\u0012\u00028��\u0012\u0006\b��\u0012\u00028\u00010\u00052\u0012\u0010b\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u0014H\u0087\n¢\u0006\u0004\bf\u0010h\u001aJ\u0010f\u001a\u00020\u0006\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0012\u0012\u0006\b��\u0012\u00028��\u0012\u0006\b��\u0012\u00028\u00010\u00052\u0018\u0010\u0015\u001a\u0014\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u00140TH\u0087\n¢\u0006\u0004\bf\u0010[\u001aD\u0010f\u001a\u00020\u0006\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0012\u0012\u0006\b��\u0012\u00028��\u0012\u0006\b��\u0012\u00028\u00010\u00052\u0012\u0010d\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\tH\u0087\n¢\u0006\u0004\bf\u0010i\u001aJ\u0010f\u001a\u00020\u0006\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0012\u0012\u0006\b��\u0012\u00028��\u0012\u0006\b��\u0012\u00028\u00010\u00052\u0018\u0010\u0015\u001a\u0014\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u00140VH\u0087\n¢\u0006\u0004\bf\u0010\\\u001aI\u0010j\u001a\u00020\u0006\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0012\u0012\u0006\b��\u0012\u00028��\u0012\u0006\b��\u0012\u00028\u00010\u00052\u001a\u0010\u0015\u001a\u0016\u0012\u0012\b\u0001\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u00140\u0013¢\u0006\u0004\bj\u0010g\u001aG\u0010j\u001a\u00020\u0006\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0012\u0012\u0006\b��\u0012\u00028��\u0012\u0006\b��\u0012\u00028\u00010\u00052\u0018\u0010\u0015\u001a\u0014\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u00140T¢\u0006\u0004\bj\u0010[\u001aG\u0010j\u001a\u00020\u0006\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0012\u0012\u0006\b��\u0012\u00028��\u0012\u0006\b��\u0012\u00028\u00010\u00052\u0018\u0010\u0015\u001a\u0014\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u00140V¢\u0006\u0004\bj\u0010\\\u001a=\u0010k\u001a\u0004\u0018\u00018\u0001\"\t\b��\u0010��¢\u0006\u0002\b#\"\u0004\b\u0001\u0010\u0001*\u0010\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u00052\u0006\u0010$\u001a\u00028��H\u0087\b¢\u0006\u0004\bk\u00107\u001a<\u0010l\u001a\u00020\u0006\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u00052\u0006\u0010$\u001a\u00028��2\u0006\u0010)\u001a\u00028\u0001H\u0087\n¢\u0006\u0004\bl\u0010m\u001a=\u0010n\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0016\u0012\u0012\b\u0001\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u00140\u0013¢\u0006\u0004\bn\u0010\u001d\u001aS\u0010n\u001a\u00028\u0002\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001\"\u0018\b\u0002\u00100*\u0012\u0012\u0006\b��\u0012\u00028��\u0012\u0006\b��\u0012\u00028\u00010\u0005*\u0016\u0012\u0012\b\u0001\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u00140\u00132\u0006\u00101\u001a\u00028\u0002¢\u0006\u0004\bn\u0010o\u001a;\u0010n\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0014\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u00140T¢\u0006\u0004\bn\u0010p\u001aQ\u0010n\u001a\u00028\u0002\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001\"\u0018\b\u0002\u00100*\u0012\u0012\u0006\b��\u0012\u00028��\u0012\u0006\b��\u0012\u00028\u00010\u0005*\u0014\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u00140T2\u0006\u00101\u001a\u00028\u0002¢\u0006\u0004\bn\u0010q\u001a9\u0010n\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0010\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\tH\u0007¢\u0006\u0004\bn\u0010^\u001aO\u0010n\u001a\u00028\u0002\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001\"\u0018\b\u0002\u00100*\u0012\u0012\u0006\b��\u0012\u00028��\u0012\u0006\b��\u0012\u00028\u00010\u0005*\u0010\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t2\u0006\u00101\u001a\u00028\u0002H\u0007¢\u0006\u0004\bn\u0010e\u001a;\u0010n\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\t\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0014\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u00140V¢\u0006\u0004\bn\u0010r\u001aQ\u0010n\u001a\u00028\u0002\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001\"\u0018\b\u0002\u00100*\u0012\u0012\u0006\b��\u0012\u00028��\u0012\u0006\b��\u0012\u00028\u00010\u0005*\u0014\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u00140V2\u0006\u00101\u001a\u00028\u0002¢\u0006\u0004\bn\u0010s\u001a9\u0010t\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u0005\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u0010\u0012\u0006\b\u0001\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\tH\u0007¢\u0006\u0004\bt\u0010^\u001a8\u0010u\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u0014\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u0001*\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u001fH\u0087\b¢\u0006\u0004\bu\u0010v\u0082\u0002\u0007\n\u0005\b\u009920\u0001¨\u0006w"}, d2 = {"K", "V", "", "capacity", "Lkotlin/Function1;", "", "", "Lkotlin/ExtensionFunctionType;", "builderAction", "", "buildMap", "(ILkotlin/Function1;)Ljava/util/Map;", "(Lkotlin/Function1;)Ljava/util/Map;", "emptyMap", "()Ljava/util/Map;", "Ljava/util/HashMap;", "Lkotlin/collections/HashMap;", "hashMapOf", "()Ljava/util/HashMap;", "", "Lkotlin/Pair;", "pairs", "([Lkotlin/Pair;)Ljava/util/HashMap;", "Ljava/util/LinkedHashMap;", "Lkotlin/collections/LinkedHashMap;", "linkedMapOf", "()Ljava/util/LinkedHashMap;", "([Lkotlin/Pair;)Ljava/util/LinkedHashMap;", "mapOf", "([Lkotlin/Pair;)Ljava/util/Map;", "mutableMapOf", "", "component1", "(Ljava/util/Map$Entry;)Ljava/lang/Object;", "component2", "Lkotlin/internal/OnlyInputTypes;", "key", "", "contains", "(Ljava/util/Map;Ljava/lang/Object;)Z", "containsKey", FirebaseAnalytics.Param.VALUE, "containsValue", "predicate", "filter", "(Ljava/util/Map;Lkotlin/Function1;)Ljava/util/Map;", "filterKeys", "filterNot", "M", FirebaseAnalytics.Param.DESTINATION, "filterNotTo", "(Ljava/util/Map;Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "filterTo", "filterValues", "get", "(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;", "Lkotlin/Function0;", "defaultValue", "getOrElse", "(Ljava/util/Map;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;", "getOrElseNullable", "getOrPut", "getValue", "R", "ifEmpty", "(Ljava/util/Map;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;", "isNotEmpty", "(Ljava/util/Map;)Z", "isNullOrEmpty", "", "iterator", "(Ljava/util/Map;)Ljava/util/Iterator;", "", "", "mutableIterator", "transform", "mapKeys", "mapKeysTo", "mapValues", "mapValuesTo", "minus", "(Ljava/util/Map;Ljava/lang/Object;)Ljava/util/Map;", "keys", "(Ljava/util/Map;[Ljava/lang/Object;)Ljava/util/Map;", "", "(Ljava/util/Map;Ljava/lang/Iterable;)Ljava/util/Map;", "Lkotlin/sequences/Sequence;", "(Ljava/util/Map;Lkotlin/sequences/Sequence;)Ljava/util/Map;", "minusAssign", "(Ljava/util/Map;Ljava/lang/Object;)V", "(Ljava/util/Map;[Ljava/lang/Object;)V", "(Ljava/util/Map;Ljava/lang/Iterable;)V", "(Ljava/util/Map;Lkotlin/sequences/Sequence;)V", "optimizeReadOnlyMap", "(Ljava/util/Map;)Ljava/util/Map;", "orEmpty", "plus", "(Ljava/util/Map;[Lkotlin/Pair;)Ljava/util/Map;", "pair", "(Ljava/util/Map;Lkotlin/Pair;)Ljava/util/Map;", "map", "(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;", "plusAssign", "(Ljava/util/Map;[Lkotlin/Pair;)V", "(Ljava/util/Map;Lkotlin/Pair;)V", "(Ljava/util/Map;Ljava/util/Map;)V", "putAll", "remove", "set", "(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V", "toMap", "([Lkotlin/Pair;Ljava/util/Map;)Ljava/util/Map;", "(Ljava/lang/Iterable;)Ljava/util/Map;", "(Ljava/lang/Iterable;Ljava/util/Map;)Ljava/util/Map;", "(Lkotlin/sequences/Sequence;)Ljava/util/Map;", "(Lkotlin/sequences/Sequence;Ljava/util/Map;)Ljava/util/Map;", "toMutableMap", "toPair", "(Ljava/util/Map$Entry;)Lkotlin/Pair;", "kotlin-stdlib"}, k = 5, mv = {1, 1, 15}, pn = "", xi = 0, xs = "kotlin/collections/MapsKt")
/* loaded from: classes2-dex2jar.jar:kotlin/collections/MapsKt__MapsKt.class */
public class MapsKt__MapsKt extends MapsKt__MapsJVMKt {
    @NotNull
    /* renamed from: f */
    public static <K, V> Map<K, V> m2085f() {
        EmptyMap emptyMap = EmptyMap.f20521f;
        if (emptyMap != null) {
            return emptyMap;
        }
        throw new NullPointerException("null cannot be cast to non-null type kotlin.collections.Map<K, V>");
    }

    @SinceKotlin
    /* renamed from: g */
    public static <K, V> V m2084g(@NotNull Map<K, ? extends V> getValue, K k) {
        Intrinsics.m1830e(getValue, "$this$getValue");
        return (V) MapsKt__MapWithDefaultKt.m2090a(getValue, k);
    }

    @NotNull
    /* renamed from: h */
    public static <K, V> Map<K, V> m2083h(@NotNull Pair<? extends K, ? extends V>... pairs) {
        Map<K, V> map;
        int c;
        Intrinsics.m1830e(pairs, "pairs");
        if (pairs.length > 0) {
            c = MapsKt__MapsJVMKt.m2088c(pairs.length);
            LinkedHashMap linkedHashMap = new LinkedHashMap(c);
            m2076o(pairs, linkedHashMap);
            map = linkedHashMap;
        } else {
            map = m2085f();
        }
        return map;
    }

    @NotNull
    /* renamed from: i */
    public static final <K, V> Map<K, V> m2082i(@NotNull Map<K, ? extends V> optimizeReadOnlyMap) {
        Object obj;
        Object f;
        Intrinsics.m1830e(optimizeReadOnlyMap, "$this$optimizeReadOnlyMap");
        int size = optimizeReadOnlyMap.size();
        if (size != 0) {
            obj = optimizeReadOnlyMap;
            if (size == 1) {
                obj = (Map<K, V>) MapsKt__MapsJVMKt.m2086e(optimizeReadOnlyMap);
            }
        } else {
            f = m2085f();
            obj = (Map<K, V>) f;
        }
        return (Map<K, V>) obj;
    }

    /* renamed from: j */
    public static final <K, V> void m2081j(@NotNull Map<? super K, ? super V> putAll, @NotNull Iterable<? extends Pair<? extends K, ? extends V>> pairs) {
        Intrinsics.m1830e(putAll, "$this$putAll");
        Intrinsics.m1830e(pairs, "pairs");
        Iterator<? extends Pair<? extends K, ? extends V>> it = pairs.iterator();
        while (it.hasNext()) {
            Pair pair = (Pair) it.next();
            putAll.put((Object) pair.m2486a(), (Object) pair.m2485b());
        }
    }

    /* renamed from: k */
    public static final <K, V> void m2080k(@NotNull Map<? super K, ? super V> putAll, @NotNull Pair<? extends K, ? extends V>[] pairs) {
        Intrinsics.m1830e(putAll, "$this$putAll");
        Intrinsics.m1830e(pairs, "pairs");
        for (Pair<? extends K, ? extends V> pair : pairs) {
            putAll.put((Object) pair.m2486a(), (Object) pair.m2485b());
        }
    }

    @NotNull
    /* renamed from: l */
    public static <K, V> Map<K, V> m2079l(@NotNull Iterable<? extends Pair<? extends K, ? extends V>> toMap) {
        Map<K, V> map;
        int c;
        Intrinsics.m1830e(toMap, "$this$toMap");
        if (toMap instanceof Collection) {
            Collection collection = (Collection) toMap;
            int size = collection.size();
            if (size == 0) {
                map = m2085f();
            } else if (size != 1) {
                c = MapsKt__MapsJVMKt.m2088c(collection.size());
                LinkedHashMap linkedHashMap = new LinkedHashMap(c);
                m2078m(toMap, linkedHashMap);
                map = linkedHashMap;
            } else {
                map = MapsKt__MapsJVMKt.m2087d((Pair) (toMap instanceof List ? ((List) toMap).get(0) : toMap.iterator().next()));
            }
            return map;
        }
        LinkedHashMap linkedHashMap2 = new LinkedHashMap();
        m2078m(toMap, linkedHashMap2);
        return m2082i(linkedHashMap2);
    }

    @NotNull
    /* renamed from: m */
    public static final <K, V, M extends Map<? super K, ? super V>> M m2078m(@NotNull Iterable<? extends Pair<? extends K, ? extends V>> toMap, @NotNull M destination) {
        Intrinsics.m1830e(toMap, "$this$toMap");
        Intrinsics.m1830e(destination, "destination");
        m2081j(destination, toMap);
        return destination;
    }

    @SinceKotlin
    @NotNull
    /* renamed from: n */
    public static <K, V> Map<K, V> m2077n(@NotNull Map<? extends K, ? extends V> toMap) {
        Intrinsics.m1830e(toMap, "$this$toMap");
        int size = toMap.size();
        return size != 0 ? size != 1 ? m2075p(toMap) : MapsKt__MapsJVMKt.m2086e(toMap) : m2085f();
    }

    @NotNull
    /* renamed from: o */
    public static final <K, V, M extends Map<? super K, ? super V>> M m2076o(@NotNull Pair<? extends K, ? extends V>[] toMap, @NotNull M destination) {
        Intrinsics.m1830e(toMap, "$this$toMap");
        Intrinsics.m1830e(destination, "destination");
        m2080k(destination, toMap);
        return destination;
    }

    @SinceKotlin
    @NotNull
    /* renamed from: p */
    public static <K, V> Map<K, V> m2075p(@NotNull Map<? extends K, ? extends V> toMutableMap) {
        Intrinsics.m1830e(toMutableMap, "$this$toMutableMap");
        return new LinkedHashMap(toMutableMap);
    }
}
