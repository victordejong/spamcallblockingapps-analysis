package kotlin.comparisons;

import java.util.Comparator;
import kotlin.Metadata;
import kotlin.jvm.functions.Function1;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
/* JADX INFO: Access modifiers changed from: package-private */
@Metadata(bv = {1, 0, 3}, d1 = {"��<\n��\n\u0002\u0018\u0002\n\u0002\u0010\u000f\n��\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u0011\n\u0002\b\b\n\u0002\u0010\b\n\u0002\b\u000b\n\u0002\u0010��\n\u0002\b\t\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0006\u001aE\u0010\u0006\u001a\u0012\u0012\u0004\u0012\u00028��0\u0004j\b\u0012\u0004\u0012\u00028��`\u0005\"\u0004\b��\u0010��2\u001a\b\u0004\u0010\u0003\u001a\u0014\u0012\u0004\u0012\u00028��\u0012\n\u0012\b\u0012\u0002\b\u0003\u0018\u00010\u00020\u0001H\u0087\bø\u0001��¢\u0006\u0004\b\u0006\u0010\u0007\u001a[\u0010\u0006\u001a\u0012\u0012\u0004\u0012\u00028��0\u0004j\b\u0012\u0004\u0012\u00028��`\u0005\"\u0004\b��\u0010��26\u0010\t\u001a\u001c\u0012\u0018\b\u0001\u0012\u0014\u0012\u0004\u0012\u00028��\u0012\n\u0012\b\u0012\u0002\b\u0003\u0018\u00010\u00020\u00010\b\"\u0014\u0012\u0004\u0012\u00028��\u0012\n\u0012\b\u0012\u0002\b\u0003\u0018\u00010\u00020\u0001¢\u0006\u0004\b\u0006\u0010\n\u001aa\u0010\u0006\u001a\u0012\u0012\u0004\u0012\u00028��0\u0004j\b\u0012\u0004\u0012\u00028��`\u0005\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u000b2\u001a\u0010\f\u001a\u0016\u0012\u0006\b��\u0012\u00028\u00010\u0004j\n\u0012\u0006\b��\u0012\u00028\u0001`\u00052\u0014\b\u0004\u0010\u0003\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u0001H\u0087\bø\u0001��¢\u0006\u0004\b\u0006\u0010\r\u001aE\u0010\u000e\u001a\u0012\u0012\u0004\u0012\u00028��0\u0004j\b\u0012\u0004\u0012\u00028��`\u0005\"\u0004\b��\u0010��2\u001a\b\u0004\u0010\u0003\u001a\u0014\u0012\u0004\u0012\u00028��\u0012\n\u0012\b\u0012\u0002\b\u0003\u0018\u00010\u00020\u0001H\u0087\bø\u0001��¢\u0006\u0004\b\u000e\u0010\u0007\u001aa\u0010\u000e\u001a\u0012\u0012\u0004\u0012\u00028��0\u0004j\b\u0012\u0004\u0012\u00028��`\u0005\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u000b2\u001a\u0010\f\u001a\u0016\u0012\u0006\b��\u0012\u00028\u00010\u0004j\n\u0012\u0006\b��\u0012\u00028\u0001`\u00052\u0014\b\u0004\u0010\u0003\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u0001H\u0087\bø\u0001��¢\u0006\u0004\b\u000e\u0010\r\u001a/\u0010\u0012\u001a\u00020\u0011\"\f\b��\u0010��*\u0006\u0012\u0002\b\u00030\u00022\b\u0010\u000f\u001a\u0004\u0018\u00018��2\b\u0010\u0010\u001a\u0004\u0018\u00018��¢\u0006\u0004\b\u0012\u0010\u0013\u001aC\u0010\u0014\u001a\u00020\u0011\"\u0004\b��\u0010��2\u0006\u0010\u000f\u001a\u00028��2\u0006\u0010\u0010\u001a\u00028��2\u0018\u0010\u0003\u001a\u0014\u0012\u0004\u0012\u00028��\u0012\n\u0012\b\u0012\u0002\b\u0003\u0018\u00010\u00020\u0001H\u0087\bø\u0001��¢\u0006\u0004\b\u0014\u0010\u0015\u001a[\u0010\u0014\u001a\u00020\u0011\"\u0004\b��\u0010��2\u0006\u0010\u000f\u001a\u00028��2\u0006\u0010\u0010\u001a\u00028��26\u0010\t\u001a\u001c\u0012\u0018\b\u0001\u0012\u0014\u0012\u0004\u0012\u00028��\u0012\n\u0012\b\u0012\u0002\b\u0003\u0018\u00010\u00020\u00010\b\"\u0014\u0012\u0004\u0012\u00028��\u0012\n\u0012\b\u0012\u0002\b\u0003\u0018\u00010\u00020\u0001¢\u0006\u0004\b\u0014\u0010\u0016\u001a_\u0010\u0014\u001a\u00020\u0011\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u000b2\u0006\u0010\u000f\u001a\u00028��2\u0006\u0010\u0010\u001a\u00028��2\u001a\u0010\f\u001a\u0016\u0012\u0006\b��\u0012\u00028\u00010\u0004j\n\u0012\u0006\b��\u0012\u00028\u0001`\u00052\u0012\u0010\u0003\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u0001H\u0087\bø\u0001��¢\u0006\u0004\b\u0014\u0010\u0017\u001aG\u0010\u0019\u001a\u00020\u0011\"\u0004\b��\u0010��2\u0006\u0010\u000f\u001a\u00028��2\u0006\u0010\u0010\u001a\u00028��2 \u0010\t\u001a\u001c\u0012\u0018\b\u0001\u0012\u0014\u0012\u0004\u0012\u00028��\u0012\n\u0012\b\u0012\u0002\b\u0003\u0018\u00010\u00020\u00010\bH\u0002¢\u0006\u0004\b\u0018\u0010\u0016\u001a-\u0010\u001a\u001a\u0012\u0012\u0004\u0012\u00028��0\u0004j\b\u0012\u0004\u0012\u00028��`\u0005\"\u000e\b��\u0010��*\b\u0012\u0004\u0012\u00028��0\u0002¢\u0006\u0004\b\u001a\u0010\u001b\u001a4\u0010\u001c\u001a\u0016\u0012\u0006\u0012\u0004\u0018\u00018��0\u0004j\n\u0012\u0006\u0012\u0004\u0018\u00018��`\u0005\"\u000e\b��\u0010��*\b\u0012\u0004\u0012\u00028��0\u0002H\u0087\b¢\u0006\u0004\b\u001c\u0010\u001b\u001aG\u0010\u001c\u001a\u0016\u0012\u0006\u0012\u0004\u0018\u00018��0\u0004j\n\u0012\u0006\u0012\u0004\u0018\u00018��`\u0005\"\b\b��\u0010��*\u00020\u001d2\u001a\u0010\f\u001a\u0016\u0012\u0006\b��\u0012\u00028��0\u0004j\n\u0012\u0006\b��\u0012\u00028��`\u0005¢\u0006\u0004\b\u001c\u0010\u001e\u001a4\u0010\u001f\u001a\u0016\u0012\u0006\u0012\u0004\u0018\u00018��0\u0004j\n\u0012\u0006\u0012\u0004\u0018\u00018��`\u0005\"\u000e\b��\u0010��*\b\u0012\u0004\u0012\u00028��0\u0002H\u0087\b¢\u0006\u0004\b\u001f\u0010\u001b\u001aG\u0010\u001f\u001a\u0016\u0012\u0006\u0012\u0004\u0018\u00018��0\u0004j\n\u0012\u0006\u0012\u0004\u0018\u00018��`\u0005\"\b\b��\u0010��*\u00020\u001d2\u001a\u0010\f\u001a\u0016\u0012\u0006\b��\u0012\u00028��0\u0004j\n\u0012\u0006\b��\u0012\u00028��`\u0005¢\u0006\u0004\b\u001f\u0010\u001e\u001a-\u0010 \u001a\u0012\u0012\u0004\u0012\u00028��0\u0004j\b\u0012\u0004\u0012\u00028��`\u0005\"\u000e\b��\u0010��*\b\u0012\u0004\u0012\u00028��0\u0002¢\u0006\u0004\b \u0010\u001b\u001a7\u0010!\u001a\u0012\u0012\u0004\u0012\u00028��0\u0004j\b\u0012\u0004\u0012\u00028��`\u0005\"\u0004\b��\u0010��*\u0012\u0012\u0004\u0012\u00028��0\u0004j\b\u0012\u0004\u0012\u00028��`\u0005¢\u0006\u0004\b!\u0010\u001e\u001aV\u0010\"\u001a\u0012\u0012\u0004\u0012\u00028��0\u0004j\b\u0012\u0004\u0012\u00028��`\u0005\"\u0004\b��\u0010��*\u0012\u0012\u0004\u0012\u00028��0\u0004j\b\u0012\u0004\u0012\u00028��`\u00052\u001a\u0010\f\u001a\u0016\u0012\u0006\b��\u0012\u00028��0\u0004j\n\u0012\u0006\b��\u0012\u00028��`\u0005H\u0086\u0004¢\u0006\u0004\b\"\u0010#\u001aY\u0010$\u001a\u0012\u0012\u0004\u0012\u00028��0\u0004j\b\u0012\u0004\u0012\u00028��`\u0005\"\u0004\b��\u0010��*\u0012\u0012\u0004\u0012\u00028��0\u0004j\b\u0012\u0004\u0012\u00028��`\u00052\u001a\b\u0004\u0010\u0003\u001a\u0014\u0012\u0004\u0012\u00028��\u0012\n\u0012\b\u0012\u0002\b\u0003\u0018\u00010\u00020\u0001H\u0087\bø\u0001��¢\u0006\u0004\b$\u0010\r\u001au\u0010$\u001a\u0012\u0012\u0004\u0012\u00028��0\u0004j\b\u0012\u0004\u0012\u00028��`\u0005\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u000b*\u0012\u0012\u0004\u0012\u00028��0\u0004j\b\u0012\u0004\u0012\u00028��`\u00052\u001a\u0010\f\u001a\u0016\u0012\u0006\b��\u0012\u00028\u00010\u0004j\n\u0012\u0006\b��\u0012\u00028\u0001`\u00052\u0014\b\u0004\u0010\u0003\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u0001H\u0087\bø\u0001��¢\u0006\u0004\b$\u0010%\u001aY\u0010&\u001a\u0012\u0012\u0004\u0012\u00028��0\u0004j\b\u0012\u0004\u0012\u00028��`\u0005\"\u0004\b��\u0010��*\u0012\u0012\u0004\u0012\u00028��0\u0004j\b\u0012\u0004\u0012\u00028��`\u00052\u001a\b\u0004\u0010\u0003\u001a\u0014\u0012\u0004\u0012\u00028��\u0012\n\u0012\b\u0012\u0002\b\u0003\u0018\u00010\u00020\u0001H\u0087\bø\u0001��¢\u0006\u0004\b&\u0010\r\u001au\u0010&\u001a\u0012\u0012\u0004\u0012\u00028��0\u0004j\b\u0012\u0004\u0012\u00028��`\u0005\"\u0004\b��\u0010��\"\u0004\b\u0001\u0010\u000b*\u0012\u0012\u0004\u0012\u00028��0\u0004j\b\u0012\u0004\u0012\u00028��`\u00052\u001a\u0010\f\u001a\u0016\u0012\u0006\b��\u0012\u00028\u00010\u0004j\n\u0012\u0006\b��\u0012\u00028\u0001`\u00052\u0014\b\u0004\u0010\u0003\u001a\u000e\u0012\u0004\u0012\u00028��\u0012\u0004\u0012\u00028\u00010\u0001H\u0087\bø\u0001��¢\u0006\u0004\b&\u0010%\u001aw\u0010+\u001a\u0012\u0012\u0004\u0012\u00028��0\u0004j\b\u0012\u0004\u0012\u00028��`\u0005\"\u0004\b��\u0010��*\u0012\u0012\u0004\u0012\u00028��0\u0004j\b\u0012\u0004\u0012\u00028��`\u000528\b\u0004\u0010*\u001a2\u0012\u0013\u0012\u00118��¢\u0006\f\b(\u0012\b\b)\u0012\u0004\b\b(\u000f\u0012\u0013\u0012\u00118��¢\u0006\f\b(\u0012\b\b)\u0012\u0004\b\b(\u0010\u0012\u0004\u0012\u00020\u00110'H\u0087\bø\u0001��¢\u0006\u0004\b+\u0010,\u001aV\u0010-\u001a\u0012\u0012\u0004\u0012\u00028��0\u0004j\b\u0012\u0004\u0012\u00028��`\u0005\"\u0004\b��\u0010��*\u0012\u0012\u0004\u0012\u00028��0\u0004j\b\u0012\u0004\u0012\u00028��`\u00052\u001a\u0010\f\u001a\u0016\u0012\u0006\b��\u0012\u00028��0\u0004j\n\u0012\u0006\b��\u0012\u00028��`\u0005H\u0086\u0004¢\u0006\u0004\b-\u0010#\u0082\u0002\u0007\n\u0005\b\u009920\u0001¨\u0006."}, d2 = {"T", "Lkotlin/Function1;", "", "selector", "Ljava/util/Comparator;", "Lkotlin/Comparator;", "compareBy", "(Lkotlin/Function1;)Ljava/util/Comparator;", "", "selectors", "([Lkotlin/jvm/functions/Function1;)Ljava/util/Comparator;", "K", "comparator", "(Ljava/util/Comparator;Lkotlin/Function1;)Ljava/util/Comparator;", "compareByDescending", "a", "b", "", "compareValues", "(Ljava/lang/Comparable;Ljava/lang/Comparable;)I", "compareValuesBy", "(Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)I", "(Ljava/lang/Object;Ljava/lang/Object;[Lkotlin/jvm/functions/Function1;)I", "(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;Lkotlin/jvm/functions/Function1;)I", "compareValuesByImpl$ComparisonsKt__ComparisonsKt", "compareValuesByImpl", "naturalOrder", "()Ljava/util/Comparator;", "nullsFirst", "", "(Ljava/util/Comparator;)Ljava/util/Comparator;", "nullsLast", "reverseOrder", "reversed", "then", "(Ljava/util/Comparator;Ljava/util/Comparator;)Ljava/util/Comparator;", "thenBy", "(Ljava/util/Comparator;Ljava/util/Comparator;Lkotlin/Function1;)Ljava/util/Comparator;", "thenByDescending", "Lkotlin/Function2;", "Lkotlin/ParameterName;", "name", "comparison", "thenComparator", "(Ljava/util/Comparator;Lkotlin/Function2;)Ljava/util/Comparator;", "thenDescending", "kotlin-stdlib"}, k = 5, mv = {1, 1, 15}, pn = "", xi = 0, xs = "kotlin/comparisons/ComparisonsKt")
/* loaded from: classes2-dex2jar.jar:kotlin/comparisons/ComparisonsKt__ComparisonsKt.class */
public class ComparisonsKt__ComparisonsKt {
    /* renamed from: b */
    public static <T extends Comparable<?>> int m1949b(@Nullable T t, @Nullable T t2) {
        if (t == t2) {
            return 0;
        }
        if (t == null) {
            return -1;
        }
        if (t2 == null) {
            return 1;
        }
        return t.compareTo(t2);
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* renamed from: c */
    public static final <T> int m1948c(T t, T t2, Function1<? super T, ? extends Comparable<?>>[] function1Arr) {
        int b;
        for (Function1<? super T, ? extends Comparable<?>> function1 : function1Arr) {
            b = m1949b((Comparable) function1.invoke(t), (Comparable) function1.invoke(t2));
            if (b != 0) {
                return b;
            }
        }
        return 0;
    }

    @NotNull
    /* renamed from: d */
    public static <T extends Comparable<? super T>> Comparator<T> m1947d() {
        NaturalOrderComparator naturalOrderComparator = NaturalOrderComparator.f20627f;
        if (naturalOrderComparator != null) {
            return naturalOrderComparator;
        }
        throw new NullPointerException("null cannot be cast to non-null type kotlin.Comparator<T> /* = java.util.Comparator<T> */");
    }
}
